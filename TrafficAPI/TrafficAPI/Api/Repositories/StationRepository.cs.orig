namespace TrafficAPI.Api.Repositories
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;

    using Newtonsoft.Json;

    public class StationRepository
    {
        #region Public Properties

        public StationRepository(HttpClient apiClient)
        {
            this.ApiClient = apiClient;
        }

<<<<<<< HEAD
        protected HttpClient ApiClient { get; set; }

=======
>>>>>>> 1af94f71fe72df02ca5f8e8a10621b7919b0c979
        #endregion

        #region Public Methods and Operators

        public List<Station> GetSites(string locationText)
        {
            var path = string.Format(
                "sl/realtid/GetSite.json?stationSearch={0}&key=72c26d46c3efc6d5158d1dfc89b5f6fd", locationText);
            var response = this.ApiClient.GetAsync(path).Result;                                

            if (!response.IsSuccessStatusCode)
            {
                return new List<Station>();
            }

            var result = response.Content.ReadAsStringAsync().Result;

            dynamic test = JsonConvert.DeserializeObject(result);
            var siteList = new List<Station>();

            var siteTest = test.Hafas.Sites.Site;
            if (siteTest.GetType().ToString() == "Newtonsoft.Json.Linq.JObject")
            {
                var site = new Station { Name = siteTest.Name, Id = siteTest.Number };
                siteList.Add(site);
            }
            else
            {
                foreach (var item in siteTest)
                {
                    var site = new Station { Name = item.Name, Id = item.Number };
                    siteList.Add(site);
                }
            }
        
            return siteList;
        }

        #endregion
    }
}